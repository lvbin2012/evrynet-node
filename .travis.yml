language: go
go_import_path: github.com/Evrynetlabs/evrynet-node
sudo: false
env:
  global:
    - GO111MODULE=on
services:
  - docker
jobs:
  include:
    # This builder only tests code linters on latest version of Go
    - stage: build
      os: linux
      dist: xenial
      go: 1.11.x
      env:
        - GOLANGCI_LINT_VERSION=1.15.0
      git:
        submodules: false # avoid cloning Evrynetlabs/tests
      script:
        - curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b ${TRAVIS_HOME}/bin v${GOLANGCI_LINT_VERSION}
        - ./vendor.sh
        - go run build/ci.go lint

    # This builder run unittests for our project with go version 1.11.x
    - stage: build
      os: linux
      dist: xenial
      go: 1.11.x
      script:
        - go run build/ci.go install
        - go run build/ci.go test -coverage $TEST_PACKAGES
    
    # This builder run unittests for our project with go version 1.12.x
    - stage: build
      os: linux
      dist: xenial
      go: 1.12.x
      script:
        - go run build/ci.go install
        - go run build/ci.go test -coverage $TEST_PACKAGES

    # These are the latest Go versions.
    - stage: build
      os: linux
      dist: xenial
      go: 1.13.x
      script:
        - go mod vendor
        - go run build/ci.go install
        - go run build/ci.go test -coverage $TEST_PACKAGES

    # This builder run integration tests for our project with go version 1.13.x
    - stage: build
      name: "Run integration test"
      os: linux
      dist: xenial
      go: 1.13.x
      script:
        - docker --version
        - go mod vendor
        - go run build/ci.go install
        - docker build . -f ./dev/onenode/Dockerfile --label "commit=$TRAVIS_COMMIT" -t $TRAVIS_COMMIT
        - docker run -d -p 22001:8545 -it $TRAVIS_COMMIT
        - go run build/ci.go test -integration -coverage $TEST_PACKAGES